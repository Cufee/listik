services:
  listik-migrate:
    image: listik-migrate
    build:
      dockerfile: Dockerfile.migrate
    env_file:
      - .env
    volumes:
      - ${DATABASE_PATH}:/data
    networks:
      - dokploy-network

  listik:
    image: listik
    build:
      dockerfile: Dockerfile
    command: /app
    env_file:
      - .env
    environment:
      # the rest is imported from .env, which is going to be created by Dokploy automatically
      - PORT=3000 # the port does not matter, but it needs to match Traefik labels. we set it here explicitly in order to avoid any issues
    volumes:
      - ${DATABASE_PATH}:/data
    depends_on:
      listik-migrate:
        condition: service_completed_successfully
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.listik-compose.rule=Host(`listik.dev`)"
      - "traefik.http.routers.listik-compose.entrypoints=websecure"
      - "traefik.http.routers.listik-compose.tls.certResolver=letsencrypt"
      - "traefik.http.services.listik-compose.loadbalancer.server.port=3000"

networks:
  dokploy-network:
    external: true
