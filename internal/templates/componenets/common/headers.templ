package common

import "github.com/cufee/shopping-list/internal/logic"
import "strings"

templ PageHeader(title, subtitle templ.Component, actions ...templ.Component) {
	<div class="flex flex-row gap-2 justify-between">
		<div class="flex flex-col gap-1">
			if title != nil {
				<span class="text-2xl font-bold">
					@title
				</span>
			}
			if subtitle != nil {
				<span class="text-lg">
					@subtitle
				</span>
			}
		</div>
		<div class="flex flex-row gap-1">
			for _, node := range actions {
				@node
			}
		</div>
	</div>
}

func WithDescription(get func() (string, bool)) templ.Component {
	description, ok := get()
	if !ok || description == "" {
		description = "..."
	}
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := io.WriteString(w, description)
		return err
	})
}

type BreadCrumb struct {
	Label string
	Href  string
}

templ BreadcrumbsTitle(crumbs []BreadCrumb) {
	<div class="flex flex-row flex-wrap gap-1 items-center">
		for _, crumb := range crumbs {
			<div class="gap-1 hidden sm:flex">
				if crumb.Href != "" {
					<a class="text-primary link link-hover overflow-hidden text-ellipsis text-nowrap" href={ templ.URL(crumb.Href) }>{ crumb.Label }</a>
				} else {
					<span
						class={ "grow overflow-hidden text-ellipsis min-w-fit " + logic.StringIfElse(strings.Contains(crumb.Label, " "), "break-words", "break-all") }
					>
						{ crumb.Label }
					</span>
				}
				<span class="text-base-200">/</span>
			</div>
		}
	</div>
}
