package components

import "fmt"
import "github.com/cufee/shopping-list/prisma/db"
import "github.com/cufee/shopping-list/internal/templates/componenets/common"

type CreateListDialog struct {
	Header  string
	GroupID string
	Errors  map[string]string
	Inputs  map[string]string

	Dialog
}

func (d *CreateListDialog) ID() string {
	if d.id == "" {
		return "create-list-dialog"
	}
	return d.id
}

templ createListBody(groupId string, selector string, inputs map[string]string, errors map[string]string) {
	<form autocomplete="off" class="flex flex-col gap-6 form-control">
		<fieldset class="flex flex-col gap-2">
			<div class="form-control">
				<div class="label">
					<span class="label-text-alt text-lg">name</span>
				</div>
				<input class="input input-bordered grow" type="text" value={ inputs["name"] } name="name" placeholder="pokemon cards to buy" aria-label="group name"/>
				if err, ok := errors["name"]; ok {
					<div class="label">
						<span class="label-text-alt text-error">{ err }</span>
					</div>
				}
			</div>
			<div class="form-control">
				<div class="label flex flex-row justify-between">
					<span class="label-text-alt text-lg">description</span>
					<span class="badge badge-accent">optional</span>
				</div>
				<textarea class="textarea textarea-bordered" type="text" name="description" placeholder="a super secret list, please don't look" aria-label="group description">{ inputs["description"] }</textarea>
				if err, ok := errors["description"]; ok {
					<div class="label">
						<span class="label-text-alt text-error">{ err }</span>
					</div>
				}
			</div>
		</fieldset>
		@common.Button().Attrs(templ.Attributes{
			"hx-post":    fmt.Sprintf("/api/groups/%s/lists", groupId),
			"hx-trigger": "click", "hx-target": selector, "hx-select": selector, "hx-swap": "outerHTML",
		}).Primary() {
			create a new list
		}
	</form>
}

func (dialog CreateListDialog) Render(button templ.Component) templ.Component {
	dialog.Body = createListBody(dialog.GroupID, "#"+dialog.ID(), dialog.Inputs, dialog.Errors)
	dialog.ActionButton = button
	return dialog.Dialog.Render()
}

templ ListCard(list db.ListModel) {
	@Card{
		Title: list.Name,
		Body:  listCardBody(list),
	}.Render()
}

templ listCardBody(list db.ListModel) {
	<div class="flex flex-col gap-3 grow">
		<span class="text-lg">
			if desc, ok := list.Desc(); ok && desc != "" {
				{ desc }
			} else {
				...
			}
		</span>
		<span class="text-sm">
			{ list.CreatedAt.String() }
		</span>
	</div>
}
